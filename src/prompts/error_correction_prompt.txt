Fix this Python code that caused an error during execution.

Return ONLY the corrected code with proper indentation.
Do not add explanations or comments.

Requirements:
1. The code must define and return a model (e.g., XGBRegressor, RandomForestClassifier, etc.). You may not change the model type: if it is classification, the correction must be classification; if it is regression, the correction must be regression.
2. All necessary imports must be inside the `load_model()` function.
3. No extra code or imports are allowed outside the `load_model()` function.

Error Message:
$error_msg

Faulty Code:
$faulty_code

Examples of valid final classification code:

def load_model():
    from sklearn.ensemble import RandomForestClassifier
    return RandomForestClassifier(n_estimators=100)

or regression code:

def load_model():
    from xgboost import XGBRegressor
    return XGBRegressor(n_estimators=100, max_depth=5, learning_rate=0.1)

Common Mistakes to Avoid:
- Incomplete function that does not return a model.
- Including imports or comments outside of `load_model()`.

See the examples:

Example 1:

Faulty Code:

```python
def load_model():
	from lightgbm import LGBMClassifier
	model = LGBMClassifier(num_leaves=31, max_depth=-1, n_estimators=200, learning_rate=0.1)

Corrected Code:
def load_model():
	from lightgbm import LGBMClassifier
	model = LGBMClassifier(num_leaves=31, max_depth=-1, n_estimators=200, learning_rate=0.1)
	return model

Example 2:

Faulty Code:
from xgboost import XGBRegressor # Import is outside the function
def load_model(): 
    return XGBRegressor(n_estimators=50, max_depth=3) 


Corrected Code:
def load_model(): 
    from xgboost import XGBRegressor 
    return XGBRegressor(n_estimators=50, max_depth=3)


Now, provide ONLY the fixed version of `load_model()` that satisfies all requirements. Corrected Code:
